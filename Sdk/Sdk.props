<!--
***********************************************************************************************
Sdk.props
WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and have
          created a backup copy.  Incorrect changes to this file will make it
          impossible to load or build your projects from the command-line or the IDE.
Copyright (c) Els_kom org. All rights reserved.
***********************************************************************************************
-->
<Project>

  <Import Sdk="Microsoft.NET.Sdk" Project="Sdk.props" />

  <PropertyGroup>
    <!-- Default these to true. -->
    <ProduceReferenceAssembly Condition="'$(ProduceReferenceAssembly)' == ''">true</ProduceReferenceAssembly>
    <PublishReferenceAssemblies Condition="'$(PublishReferenceAssemblies)' == '' AND '$(ProduceReferenceAssembly)' == 'true'">true</PublishReferenceAssemblies>
    <GenerateDocumentationFile Condition="'$(GenerateDocumentationFile)' == ''">true</GenerateDocumentationFile>
    <PublishDocumentationFile Condition="'$(PublishDocumentationFile)' == '' AND '$(GenerateDocumentationFile)' == 'true'">true</PublishDocumentationFile>
    <!--
        Sorry, we have to disable the warning for adding the reference assemblies to the package without adding them to the nuspec.
        This is because of the fact that if we use the methods to add them that does add them to the nuspec, then the folder paths
        would be added automatically to the project which is not intended at all or even wanted. As such for now the only way to
        fix that is to disable package analysis for now.
    -->
    <NoPackageAnalysis Condition="'$(PublishReferenceAssemblies)' == 'true'">true</NoPackageAnalysis>
  </PropertyGroup>

  <ItemGroup>
    <!-- Add reference binaries. -->
    <TfmSpecificPackageFile Include="$(OutputPath)/ref/" Condition="'$(PublishReferenceAssemblies)' == 'true'">
      <PackagePath Condition="$(TargetFramework.EndsWith('-windows')) OR $(TargetFramework.EndsWith('-android')) OR $(TargetFramework.EndsWith('-ios')) OR $(TargetFramework.EndsWith('-macos')) OR $(TargetFramework.EndsWith('-tvos')) OR $(TargetFramework.EndsWith('-watchos')) OR $(TargetFramework.EndsWith('-maccatalyst'))">ref/$(TargetFramework)$(TargetPlatformVersion)</PackagePath>
      <PackagePath Condition="!$(TargetFramework.EndsWith('-windows')) AND !$(TargetFramework.EndsWith('-android')) AND !$(TargetFramework.EndsWith('-ios')) AND !$(TargetFramework.EndsWith('-macos')) AND !$(TargetFramework.EndsWith('-tvos')) AND !$(TargetFramework.EndsWith('-watchos')) AND !$(TargetFramework.EndsWith('-maccatalyst'))">ref/$(TargetFramework)</PackagePath>
    </TfmSpecificPackageFile>
    <!-- Add documentation file to each of the reference assembly paths. -->
    <TfmSpecificPackageFile Include="$(DocumentationFile)" Condition="'$(PublishReferenceAssemblies)' == 'true' AND '$(PublishDocumentationFile)' == 'true'">
      <PackagePath Condition="$(TargetFramework.EndsWith('-windows')) OR $(TargetFramework.EndsWith('-android')) OR $(TargetFramework.EndsWith('-ios')) OR $(TargetFramework.EndsWith('-macos')) OR $(TargetFramework.EndsWith('-tvos')) OR $(TargetFramework.EndsWith('-watchos')) OR $(TargetFramework.EndsWith('-maccatalyst'))">ref/$(TargetFramework)$(TargetPlatformVersion)</PackagePath>
      <PackagePath Condition="!$(TargetFramework.EndsWith('-windows')) AND !$(TargetFramework.EndsWith('-android')) AND !$(TargetFramework.EndsWith('-ios')) AND !$(TargetFramework.EndsWith('-macos')) AND !$(TargetFramework.EndsWith('-tvos')) AND !$(TargetFramework.EndsWith('-watchos')) AND !$(TargetFramework.EndsWith('-maccatalyst'))">ref/$(TargetFramework)</PackagePath>
    </TfmSpecificPackageFile>
  </ItemGroup>

</Project>
